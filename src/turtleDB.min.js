!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.TurtleDB=t():e.TurtleDB=t()}(window,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=36)}([function(e,t,r){"use strict";var n=r(9),o=r(7),s=Object.prototype.toString;function i(e){return"[object Array]"===s.call(e)}function a(e){return null!==e&&"object"==typeof e}function c(e){return"[object Function]"===s.call(e)}function u(e,t){if(null!==e&&void 0!==e)if("object"!=typeof e&&(e=[e]),i(e))for(var r=0,n=e.length;r<n;r++)t.call(null,e[r],r,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===s.call(e)},isBuffer:o,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:a,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===s.call(e)},isFile:function(e){return"[object File]"===s.call(e)},isBlob:function(e){return"[object Blob]"===s.call(e)},isFunction:c,isStream:function(e){return a(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:u,merge:function e(){var t={};function r(r,n){"object"==typeof t[n]&&"object"==typeof r?t[n]=e(t[n],r):t[n]=r}for(var n=0,o=arguments.length;n<o;n++)u(arguments[n],r);return t},extend:function(e,t,r){return u(t,function(t,o){e[o]=r&&"function"==typeof t?n(t,r):t}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,t,r){e.exports=r(19)},function(e,t,r){var n=r(17),o=r(18);e.exports=function(e,t,r){var s=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var i=(e=e||{}).random||(e.rng||n)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t)for(var a=0;a<16;++a)t[s+a]=i[a];return t||o(i)}},function(e,t,r){!function(){var t=r(14),n=r(6).utf8,o=r(7),s=r(6).bin,i=function(e,r){e.constructor==String?e=r&&"binary"===r.encoding?s.stringToBytes(e):n.stringToBytes(e):o(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||(e=e.toString());for(var a=t.bytesToWords(e),c=8*e.length,u=1732584193,l=-271733879,d=-1732584194,h=271733878,f=0;f<a.length;f++)a[f]=16711935&(a[f]<<8|a[f]>>>24)|4278255360&(a[f]<<24|a[f]>>>8);a[c>>>5]|=128<<c%32,a[14+(c+64>>>9<<4)]=c;var p=i._ff,m=i._gg,g=i._hh,y=i._ii;for(f=0;f<a.length;f+=16){var v=u,T=l,_=d,b=h;l=y(l=y(l=y(l=y(l=g(l=g(l=g(l=g(l=m(l=m(l=m(l=m(l=p(l=p(l=p(l=p(l,d=p(d,h=p(h,u=p(u,l,d,h,a[f+0],7,-680876936),l,d,a[f+1],12,-389564586),u,l,a[f+2],17,606105819),h,u,a[f+3],22,-1044525330),d=p(d,h=p(h,u=p(u,l,d,h,a[f+4],7,-176418897),l,d,a[f+5],12,1200080426),u,l,a[f+6],17,-1473231341),h,u,a[f+7],22,-45705983),d=p(d,h=p(h,u=p(u,l,d,h,a[f+8],7,1770035416),l,d,a[f+9],12,-1958414417),u,l,a[f+10],17,-42063),h,u,a[f+11],22,-1990404162),d=p(d,h=p(h,u=p(u,l,d,h,a[f+12],7,1804603682),l,d,a[f+13],12,-40341101),u,l,a[f+14],17,-1502002290),h,u,a[f+15],22,1236535329),d=m(d,h=m(h,u=m(u,l,d,h,a[f+1],5,-165796510),l,d,a[f+6],9,-1069501632),u,l,a[f+11],14,643717713),h,u,a[f+0],20,-373897302),d=m(d,h=m(h,u=m(u,l,d,h,a[f+5],5,-701558691),l,d,a[f+10],9,38016083),u,l,a[f+15],14,-660478335),h,u,a[f+4],20,-405537848),d=m(d,h=m(h,u=m(u,l,d,h,a[f+9],5,568446438),l,d,a[f+14],9,-1019803690),u,l,a[f+3],14,-187363961),h,u,a[f+8],20,1163531501),d=m(d,h=m(h,u=m(u,l,d,h,a[f+13],5,-1444681467),l,d,a[f+2],9,-51403784),u,l,a[f+7],14,1735328473),h,u,a[f+12],20,-1926607734),d=g(d,h=g(h,u=g(u,l,d,h,a[f+5],4,-378558),l,d,a[f+8],11,-2022574463),u,l,a[f+11],16,1839030562),h,u,a[f+14],23,-35309556),d=g(d,h=g(h,u=g(u,l,d,h,a[f+1],4,-1530992060),l,d,a[f+4],11,1272893353),u,l,a[f+7],16,-155497632),h,u,a[f+10],23,-1094730640),d=g(d,h=g(h,u=g(u,l,d,h,a[f+13],4,681279174),l,d,a[f+0],11,-358537222),u,l,a[f+3],16,-722521979),h,u,a[f+6],23,76029189),d=g(d,h=g(h,u=g(u,l,d,h,a[f+9],4,-640364487),l,d,a[f+12],11,-421815835),u,l,a[f+15],16,530742520),h,u,a[f+2],23,-995338651),d=y(d,h=y(h,u=y(u,l,d,h,a[f+0],6,-198630844),l,d,a[f+7],10,1126891415),u,l,a[f+14],15,-1416354905),h,u,a[f+5],21,-57434055),d=y(d,h=y(h,u=y(u,l,d,h,a[f+12],6,1700485571),l,d,a[f+3],10,-1894986606),u,l,a[f+10],15,-1051523),h,u,a[f+1],21,-2054922799),d=y(d,h=y(h,u=y(u,l,d,h,a[f+8],6,1873313359),l,d,a[f+15],10,-30611744),u,l,a[f+6],15,-1560198380),h,u,a[f+13],21,1309151649),d=y(d,h=y(h,u=y(u,l,d,h,a[f+4],6,-145523070),l,d,a[f+11],10,-1120210379),u,l,a[f+2],15,718787259),h,u,a[f+9],21,-343485551),u=u+v>>>0,l=l+T>>>0,d=d+_>>>0,h=h+b>>>0}return t.endian([u,l,d,h])};i._ff=function(e,t,r,n,o,s,i){var a=e+(t&r|~t&n)+(o>>>0)+i;return(a<<s|a>>>32-s)+t},i._gg=function(e,t,r,n,o,s,i){var a=e+(t&n|r&~n)+(o>>>0)+i;return(a<<s|a>>>32-s)+t},i._hh=function(e,t,r,n,o,s,i){var a=e+(t^r^n)+(o>>>0)+i;return(a<<s|a>>>32-s)+t},i._ii=function(e,t,r,n,o,s,i){var a=e+(r^(t|~n))+(o>>>0)+i;return(a<<s|a>>>32-s)+t},i._blocksize=16,i._digestsize=16,e.exports=function(e,r){if(void 0===e||null===e)throw new Error("Illegal argument "+e);var n=t.wordsToBytes(i(e,r));return r&&r.asBytes?n:r&&r.asString?s.bytesToString(n):t.bytesToHex(n)}}()},function(e,t,r){(function(n){function o(){var e;try{e=t.storage.debug}catch(e){}return!e&&void 0!==n&&"env"in n&&(e=n.env.DEBUG),e}(t=e.exports=r(15)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var r=this.useColors;if(e[0]=(r?"%c":"")+this.namespace+(r?" %c":" ")+e[0]+(r?"%c ":" ")+"+"+t.humanize(this.diff),!r)return;var n="color: "+this.color;e.splice(1,0,n,"color: inherit");var o=0,s=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&"%c"===e&&(s=++o)}),e.splice(s,0,n)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=o,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(o())}).call(this,r(8))},function(e,t,r){"use strict";(function(t){var n=r(0),o=r(21),s={"Content-Type":"application/x-www-form-urlencoded"};function i(e,t){!n.isUndefined(e)&&n.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var a={adapter:function(){var e;return"undefined"!=typeof XMLHttpRequest?e=r(10):void 0!==t&&(e=r(10)),e}(),transformRequest:[function(e,t){return o(t,"Content-Type"),n.isFormData(e)||n.isArrayBuffer(e)||n.isBuffer(e)||n.isStream(e)||n.isFile(e)||n.isBlob(e)?e:n.isArrayBufferView(e)?e.buffer:n.isURLSearchParams(e)?(i(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):n.isObject(e)?(i(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};n.forEach(["delete","get","head"],function(e){a.headers[e]={}}),n.forEach(["post","put","patch"],function(e){a.headers[e]=n.merge(s)}),e.exports=a}).call(this,r(8))},function(e,t){var r={utf8:{stringToBytes:function(e){return r.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(r.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],r=0;r<e.length;r++)t.push(255&e.charCodeAt(r));return t},bytesToString:function(e){for(var t=[],r=0;r<e.length;r++)t.push(String.fromCharCode(e[r]));return t.join("")}}};e.exports=r},function(e,t){function r(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(r(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&r(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t){var r,n,o=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(e){if(r===setTimeout)return setTimeout(e,0);if((r===s||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:s}catch(e){r=s}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var c,u=[],l=!1,d=-1;function h(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&f())}function f(){if(!l){var e=a(h);l=!0;for(var t=u.length;t;){for(c=u,u=[];++d<t;)c&&c[d].run();d=-1,t=u.length}c=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new p(e,t)),1!==u.length||l||a(f)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){"use strict";e.exports=function(e,t){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return e.apply(t,r)}}},function(e,t,r){"use strict";var n=r(0),o=r(22),s=r(24),i=r(25),a=r(26),c=r(11),u="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||r(27);e.exports=function(e){return new Promise(function(t,l){var d=e.data,h=e.headers;n.isFormData(d)&&delete h["Content-Type"];var f=new XMLHttpRequest,p="onreadystatechange",m=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in f||a(e.url)||(f=new window.XDomainRequest,p="onload",m=!0,f.onprogress=function(){},f.ontimeout=function(){}),e.auth){var g=e.auth.username||"",y=e.auth.password||"";h.Authorization="Basic "+u(g+":"+y)}if(f.open(e.method.toUpperCase(),s(e.url,e.params,e.paramsSerializer),!0),f.timeout=e.timeout,f[p]=function(){if(f&&(4===f.readyState||m)&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in f?i(f.getAllResponseHeaders()):null,n={data:e.responseType&&"text"!==e.responseType?f.response:f.responseText,status:1223===f.status?204:f.status,statusText:1223===f.status?"No Content":f.statusText,headers:r,config:e,request:f};o(t,l,n),f=null}},f.onerror=function(){l(c("Network Error",e,null,f)),f=null},f.ontimeout=function(){l(c("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",f)),f=null},n.isStandardBrowserEnv()){var v=r(28),T=(e.withCredentials||a(e.url))&&e.xsrfCookieName?v.read(e.xsrfCookieName):void 0;T&&(h[e.xsrfHeaderName]=T)}if("setRequestHeader"in f&&n.forEach(h,function(e,t){void 0===d&&"content-type"===t.toLowerCase()?delete h[t]:f.setRequestHeader(t,e)}),e.withCredentials&&(f.withCredentials=!0),e.responseType)try{f.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&f.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){f&&(f.abort(),l(e),f=null)}),void 0===d&&(d=null),f.send(d)})}},function(e,t,r){"use strict";var n=r(23);e.exports=function(e,t,r,o,s){var i=new Error(e);return n(i,t,r,o,s)}},function(e,t,r){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,r){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},function(e,t){!function(){var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&r.rotl(e,8)|4278255360&r.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=r.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],r=0,n=0;r<e.length;r++,n+=8)t[n>>>5]|=e[r]<<24-n%32;return t},wordsToBytes:function(e){for(var t=[],r=0;r<32*e.length;r+=8)t.push(e[r>>>5]>>>24-r%32&255);return t},bytesToHex:function(e){for(var t=[],r=0;r<e.length;r++)t.push((e[r]>>>4).toString(16)),t.push((15&e[r]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},bytesToBase64:function(e){for(var r=[],n=0;n<e.length;n+=3)for(var o=e[n]<<16|e[n+1]<<8|e[n+2],s=0;s<4;s++)8*n+6*s<=8*e.length?r.push(t.charAt(o>>>6*(3-s)&63)):r.push("=");return r.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var r=[],n=0,o=0;n<e.length;o=++n%4)0!=o&&r.push((t.indexOf(e.charAt(n-1))&Math.pow(2,-2*o+8)-1)<<2*o|t.indexOf(e.charAt(n))>>>6-2*o);return r}};e.exports=r}()},function(e,t,r){function n(e){var r;function n(){if(n.enabled){var e=n,o=+new Date,s=o-(r||o);e.diff=s,e.prev=r,e.curr=o,r=o;for(var i=new Array(arguments.length),a=0;a<i.length;a++)i[a]=arguments[a];i[0]=t.coerce(i[0]),"string"!=typeof i[0]&&i.unshift("%O");var c=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,function(r,n){if("%%"===r)return r;c++;var o=t.formatters[n];if("function"==typeof o){var s=i[c];r=o.call(e,s),i.splice(c,1),c--}return r}),t.formatArgs.call(e,i),(n.log||t.log||console.log.bind(console)).apply(e,i)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var r,n=0;for(r in e)n=(n<<5)-n+e.charCodeAt(r),n|=0;return t.colors[Math.abs(n)%t.colors.length]}(e),n.destroy=o,"function"==typeof t.init&&t.init(n),t.instances.push(n),n}function o(){var e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}(t=e.exports=n.debug=n.default=n).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){var r;t.save(e),t.names=[],t.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(r=0;r<o;r++)n[r]&&("-"===(e=n[r].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")));for(r=0;r<t.instances.length;r++){var s=t.instances[r];s.enabled=t.enabled(s.namespace)}},t.enabled=function(e){if("*"===e[e.length-1])return!0;var r,n;for(r=0,n=t.skips.length;r<n;r++)if(t.skips[r].test(e))return!1;for(r=0,n=t.names.length;r<n;r++)if(t.names[r].test(e))return!0;return!1},t.humanize=r(16),t.instances=[],t.names=[],t.skips=[],t.formatters={}},function(e,t){var r=1e3,n=60*r,o=60*n,s=24*o,i=365.25*s;function a(e,t,r){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+r:Math.ceil(e/t)+" "+r+"s"}e.exports=function(e,t){t=t||{};var c=typeof e;if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var a=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return a*i;case"days":case"day":case"d":return a*s;case"hours":case"hour":case"hrs":case"hr":case"h":return a*o;case"minutes":case"minute":case"mins":case"min":case"m":return a*n;case"seconds":case"second":case"secs":case"sec":case"s":return a*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}(e);if("number"===c&&!1===isNaN(e))return t.long?function(e){return a(e,s,"day")||a(e,o,"hour")||a(e,n,"minute")||a(e,r,"second")||e+" ms"}(e):function(e){if(e>=s)return Math.round(e/s)+"d";if(e>=o)return Math.round(e/o)+"h";if(e>=n)return Math.round(e/n)+"m";if(e>=r)return Math.round(e/r)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t){var r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(r){var n=new Uint8Array(16);e.exports=function(){return r(n),n}}else{var o=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),o[t]=e>>>((3&t)<<3)&255;return o}}},function(e,t){for(var r=[],n=0;n<256;++n)r[n]=(n+256).toString(16).substr(1);e.exports=function(e,t){var n=t||0,o=r;return[o[e[n++]],o[e[n++]],o[e[n++]],o[e[n++]],"-",o[e[n++]],o[e[n++]],"-",o[e[n++]],o[e[n++]],"-",o[e[n++]],o[e[n++]],"-",o[e[n++]],o[e[n++]],o[e[n++]],o[e[n++]],o[e[n++]],o[e[n++]]].join("")}},function(e,t,r){"use strict";var n=r(0),o=r(9),s=r(20),i=r(5);function a(e){var t=new s(e),r=o(s.prototype.request,t);return n.extend(r,s.prototype,t),n.extend(r,t),r}var c=a(i);c.Axios=s,c.create=function(e){return a(n.merge(i,e))},c.Cancel=r(13),c.CancelToken=r(34),c.isCancel=r(12),c.all=function(e){return Promise.all(e)},c.spread=r(35),e.exports=c,e.exports.default=c},function(e,t,r){"use strict";var n=r(5),o=r(0),s=r(29),i=r(30);function a(e){this.defaults=e,this.interceptors={request:new s,response:new s}}a.prototype.request=function(e){"string"==typeof e&&(e=o.merge({url:arguments[0]},arguments[1])),(e=o.merge(n,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var t=[i,void 0],r=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)r=r.then(t.shift(),t.shift());return r},o.forEach(["delete","get","head","options"],function(e){a.prototype[e]=function(t,r){return this.request(o.merge(r||{},{method:e,url:t}))}}),o.forEach(["post","put","patch"],function(e){a.prototype[e]=function(t,r,n){return this.request(o.merge(n||{},{method:e,url:t,data:r}))}}),e.exports=a},function(e,t,r){"use strict";var n=r(0);e.exports=function(e,t){n.forEach(e,function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])})}},function(e,t,r){"use strict";var n=r(11);e.exports=function(e,t,r){var o=r.config.validateStatus;r.status&&o&&!o(r.status)?t(n("Request failed with status code "+r.status,r.config,null,r.request,r)):e(r)}},function(e,t,r){"use strict";e.exports=function(e,t,r,n,o){return e.config=t,r&&(e.code=r),e.request=n,e.response=o,e}},function(e,t,r){"use strict";var n=r(0);function o(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,r){if(!t)return e;var s;if(r)s=r(t);else if(n.isURLSearchParams(t))s=t.toString();else{var i=[];n.forEach(t,function(e,t){null!==e&&void 0!==e&&(n.isArray(e)?t+="[]":e=[e],n.forEach(e,function(e){n.isDate(e)?e=e.toISOString():n.isObject(e)&&(e=JSON.stringify(e)),i.push(o(t)+"="+o(e))}))}),s=i.join("&")}return s&&(e+=(-1===e.indexOf("?")?"?":"&")+s),e}},function(e,t,r){"use strict";var n=r(0),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,r,s,i={};return e?(n.forEach(e.split("\n"),function(e){if(s=e.indexOf(":"),t=n.trim(e.substr(0,s)).toLowerCase(),r=n.trim(e.substr(s+1)),t){if(i[t]&&o.indexOf(t)>=0)return;i[t]="set-cookie"===t?(i[t]?i[t]:[]).concat([r]):i[t]?i[t]+", "+r:r}}),i):i}},function(e,t,r){"use strict";var n=r(0);e.exports=n.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");function o(e){var n=e;return t&&(r.setAttribute("href",n),n=r.href),r.setAttribute("href",n),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:"/"===r.pathname.charAt(0)?r.pathname:"/"+r.pathname}}return e=o(window.location.href),function(t){var r=n.isString(t)?o(t):t;return r.protocol===e.protocol&&r.host===e.host}}():function(){return!0}},function(e,t,r){"use strict";var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function o(){this.message="String contains an invalid character"}o.prototype=new Error,o.prototype.code=5,o.prototype.name="InvalidCharacterError",e.exports=function(e){for(var t,r,s=String(e),i="",a=0,c=n;s.charAt(0|a)||(c="=",a%1);i+=c.charAt(63&t>>8-a%1*8)){if((r=s.charCodeAt(a+=.75))>255)throw new o;t=t<<8|r}return i}},function(e,t,r){"use strict";var n=r(0);e.exports=n.isStandardBrowserEnv()?{write:function(e,t,r,o,s,i){var a=[];a.push(e+"="+encodeURIComponent(t)),n.isNumber(r)&&a.push("expires="+new Date(r).toGMTString()),n.isString(o)&&a.push("path="+o),n.isString(s)&&a.push("domain="+s),!0===i&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,r){"use strict";var n=r(0);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){n.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=o},function(e,t,r){"use strict";var n=r(0),o=r(31),s=r(12),i=r(5),a=r(32),c=r(33);function u(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return u(e),e.baseURL&&!a(e.url)&&(e.url=c(e.baseURL,e.url)),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=n.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),n.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||i.adapter)(e).then(function(t){return u(e),t.data=o(t.data,t.headers,e.transformResponse),t},function(t){return s(t)||(u(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,r){"use strict";var n=r(0);e.exports=function(e,t,r){return n.forEach(r,function(r){e=r(e,t)}),e}},function(e,t,r){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,r){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,r){"use strict";var n=r(13);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var r=this;e(function(e){r.reason||(r.reason=new n(e),t(r.reason))})}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o(function(t){e=t}),cancel:e}},e.exports=o},function(e,t,r){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,r){"use strict";r.r(t);var n=r(3),o=r.n(n),s=r(2),i=r.n(s);var a={setRemote(e){this.remoteUrl=e},setBatchLimit(e){this.batchLimit=e},sync(){return this.syncInProgress?Promise.reject("Sync already in progress"):(this.syncInProgress=!0,this.syncTo().then(()=>this.syncFrom()).then(()=>this.syncInProgress=!1).catch(e=>console.log(e)))},create(e){if("object"==typeof e&&!Array.isArray(e)){let t,r=Object.assign({},e);r._id||0===r._id?(t=r._id,delete r._id):t=i()();const n="1-"+o()(JSON.stringify(r));r._id_rev=t+"::"+n;let s={_id:t,_winningRev:n,_revisions:[n,{},[]],_leafRevs:[n]};return this.idb.command(this.idb._meta,"CREATE",{data:s}).then(()=>this.idb.command(this.idb._store,"CREATE",{data:r})).then(()=>this._packageUpDoc(s,r)).then(e=>e).catch(e=>console.log("Create error:",e))}console.log("Please pass in a valid object.")},read(e,t=null){let r,n;return this._readMetaDoc(e).then(o=>{if(!(r=o)._winningRev)throw new Error("This document has been deleted.");if(t){if(!r._leafRevs.includes(t))throw new Error("Invalid Revision Id");n=t}else n=r._winningRev;return this._readRevFromIndex(e,n)}).then(e=>this._packageUpDoc(r,e)).then(e=>e).catch(e=>console.log("Read error:",e))},readAll(){return this.idb.command(this.idb._meta,"READ_ALL",{}).then(e=>{let t=(e=e.filter(e=>e._winningRev)).map(e=>this._readWithoutDeletedError(e._id));return Promise.all(t)}).then(e=>e=e.filter(e=>!!e)).catch(e=>console.log("readAllMetaDocsAndDocs error:",e))},update(e,t,r=null){let n,o,s;return this._readMetaDoc(e).then(e=>{if(!(n=e)._winningRev)throw new Error("This document has been deleted.");if(r){if(!n._leafRevs.includes(r))throw new Error("Invalid Revision Id");s=r}else s=n._winningRev;return s}).then(r=>(o=this._generateNewDoc(e,r,t),this.idb.command(this.idb._store,"CREATE",{data:o}),{newRev:o._id_rev.split("::")[1],oldRev:s})).then(({newRev:e,oldRev:r})=>(this._updateMetaDocRevisionTree(n._revisions,e,r,t._deleted),t._deleted?n._leafRevs.splice(n._leafRevs.indexOf(r),1):n._leafRevs[n._leafRevs.indexOf(r)]=e,n._winningRev=this._getWinningRev(n._leafRevs)||null,this.idb.command(this.idb._meta,"UPDATE",{data:n}))).then(()=>this._packageUpDoc(n,o)).then(e=>e).catch(e=>console.log("Update error:",e))},mergeUpdate(e,t,r=null){let n,o,s;return this._readMetaDoc(e).then(t=>{if(!(n=t)._winningRev)throw new Error("This document has been deleted.");if(r){if(!n._leafRevs.includes(r))throw new Error("Invalid Revision Id");o=r}else o=n._winningRev;return this._readRevFromIndex(e,o)}).then(e=>(s=this._mergeDocs(e,t),this.idb.command(this.idb._store,"CREATE",{data:s}),{newRev:s._id_rev.split("::")[1],oldRev:e._id_rev.split("::")[1]})).then(({newRev:e,oldRev:r})=>(this._updateMetaDocRevisionTree(n._revisions,e,r,t._deleted),t._deleted?n._leafRevs.splice(n._leafRevs.indexOf(r),1):n._leafRevs[n._leafRevs.indexOf(r)]=e,n._winningRev=this._getWinningRev(n._leafRevs)||null,this.idb.command(this.idb._meta,"UPDATE",{data:n}))).then(()=>this._packageUpDoc(n,s)).then(e=>e).catch(e=>console.log("Update error:",e))},delete(e,t=null){return this.update(e,{_deleted:!0},t)},setConflictWinner(e){const{_id:t,_rev:r}=e;return this._readMetaDoc(t).then(e=>this._deleteAllOtherLeafRevs(e,r)).then(()=>this.update(t,e,r)).catch(e=>console.log("setConflictWinner error:",e))},autoSyncOn(e=3e3){return this.intervalId=setInterval(this.sync.bind(this),e),!0},autoSyncOff(){return clearInterval(this.intervalId),!0},compactStore(){return new Promise((e,t)=>{const r=[];this.idb.command(this.idb._meta,"READ_ALL",{}).then(t=>{t.forEach(e=>{let t=e._leafRevs.map(t=>e._id+"::"+t);r.push(...t)}),this.idb.getStore(this.idb._store,"readwrite").openCursor().onsuccess=(t=>{let n=t.target.result;if(n){let e=n.value;if(!r.includes(e._id_rev)&&!e._deleted)n.delete();n.continue()}else e(!0)})})})},getStorageInfo(){return navigator.storage.estimate().then(({quota:e,usage:t})=>({appUsage:this.sizeOf(t),appQuota:this.sizeOf(.2*e),totalQuota:this.sizeOf(e)}))},dropDB(e){return this.idb.dropDB(e)}},c=r(1),u=r.n(c);var l=r(4)("turtleDB:syncTo");var d=class{constructor(e,t){this.targetUrl=e,this.sessionID=(new Date).toISOString(),this.revIdsFromTortoise=[],this.batchLimit=t}start(){return this.checkServerConnection("/connect").then(()=>this.getSyncToTortoiseDoc()).then(()=>this.getHighestTurtleKey()).then(()=>this.sendRequestForLastTortoiseKey("/_last_tortoise_key")).then(()=>this.getChangedMetaDocsForTortoise()).then(()=>this.batchSendChangedMetaDocsToTortoise("/_missing_rev_ids")).then(()=>this.getStoreDocsForTortoise()).then(()=>this.createNewSyncToTortoiseDoc()).then(()=>this.batchSendTurtleDocsToTortoise("/_insert_docs")).then(()=>this.updateSyncToTortoiseDoc()).catch(e=>console.log("Sync To Error:",e))}checkServerConnection(e){return u.a.get(this.targetUrl+e).then(e=>(l("\n #0 HTTP <==> Tortoise connection checked"),200===e.status)).catch(e=>{if(!e.response)return Promise.reject("Failed to connect to server");console.log("Sync To Error:",err)})}getSyncToTortoiseDoc(){return this.idb.command(this.idb._syncToStore,"READ_ALL",{}).then(e=>this.syncToTortoiseDoc=e[0]).then(()=>l("\n getSyncToTortoiseDoc() - Get record of previous syncs to Tortoise"))}getHighestTurtleKey(){return this.idb.command(this.idb._store,"GET_ALL_KEYS",{}).then(e=>{const t=e[e.length-1];this.highestTurtleKey=t||0,l(`\n getHighestTurtleKey() - Get highest primary key in the Turtle store (${this.highestTurtleKey})`)})}sendRequestForLastTortoiseKey(e){return l("\n #1 HTTP ==> to Tortoise requesting checkpoint from last sync"),u.a.post(this.targetUrl+e,this.syncToTortoiseDoc).then(e=>{this.lastTortoiseKey=e.data,l(`\n #2 HTTP <== receive response from Tortoise with checkpoint (${this.lastTortoiseKey})`)})}getChangedMetaDocsForTortoise(){return this.lastTortoiseKey===this.highestTurtleKey?Promise.reject("No sync needed - last key and highest key are equal"):this.getMetaDocsBetweenStoreKeys(this.lastTortoiseKey,this.highestTurtleKey).then(e=>this.changedTurtleMetaDocs=e).then(()=>{l(`\n getChangedMetaDocsForTortoise() - Get metadocs for all records between ${this.lastTortoiseKey} - ${this.highestTurtleKey} in the store`),l(`\n getChangedMetaDocsForTortoise() - Found ${this.changedTurtleMetaDocs.length} metadocs to send to Tortoise`)})}batchSendChangedMetaDocsToTortoise(e){if(0===this.changedTurtleMetaDocs.length)return void l("\n finished sending all batches of metadocs to Tortoise");let t=this.changedTurtleMetaDocs.splice(0,this.batchLimit);return this.sendBatchOfMetaDocs(e,t).then(()=>this.batchSendChangedMetaDocsToTortoise(e))}sendBatchOfMetaDocs(e,t){return l(`\n #3 HTTP ==> Sending batch of ${t.length} metadocs to Tortoise`),u.a.post(this.targetUrl+e,{metaDocs:t}).then(e=>{l(`\n #4 HTTP <== Response from Tortoise requesting ${e.data.length} leaf revs/docs`),this.revIdsFromTortoise.push(...e.data)})}getStoreDocsForTortoise(){const e=this.revIdsFromTortoise.map(e=>this.idb.command(this.idb._store,"INDEX_READ",{data:{indexName:"_id_rev",key:e}}));return Promise.all(e).then(e=>this.storeDocsForTortoise=e).then(()=>l(`\n getStoreDocsForTortoise() - Get ${this.storeDocsForTortoise.length} changed records for Tortoise`))}createNewSyncToTortoiseDoc(){let e={lastKey:this.highestTurtleKey,sessionID:this.sessionID};this.newSyncToTortoiseDoc=Object.assign(this.syncToTortoiseDoc,{history:[e].concat(this.syncToTortoiseDoc.history)}),l("\n createNewSyncToTortoiseDoc() - prepare updated record of sync history with Tortoise")}batchSendTurtleDocsToTortoise(e){let t=this.storeDocsForTortoise.splice(0,this.batchLimit);return 0===this.storeDocsForTortoise.length?this.sendBatchOfDocs(e,t,!0).then(()=>l("\n finished sending all batches of metadocs to Tortoise")):this.sendBatchOfDocs(e,t).then(()=>this.batchSendTurtleDocsToTortoise(e))}sendBatchOfDocs(e,t,r=!1){let n={docs:t};return r&&(n.newSyncToTortoiseDoc=this.newSyncToTortoiseDoc,n.lastBatch=r),l(`\n #5 HTTP ==> Sending batch of ${t.length} docs to Tortoise ${r?"with sync history":""}`),u.a.post(this.targetUrl+e,n)}updateSyncToTortoiseDoc(){return l("\n #6 HTTP <== receive confirmation from Tortoise, update sync history"),this.idb.command(this.idb._syncToStore,"UPDATE",{data:this.newSyncToTortoiseDoc})}getMetaDocsBetweenStoreKeys(e,t){return this.idb.command(this.idb._store,"READ_BETWEEN",{x:e,y:t}).then(e=>this.getUniqueIDs(e)).then(e=>this.getMetaDocsByIDs(e))}getUniqueIDs(e){let t={};for(let r=0;r<e.length;r++){const n=e[r]._id_rev.split("::")[0];t[n]||(t[n]=!0)}return Object.keys(t)}getMetaDocsByIDs(e){let t=[];return e.forEach(e=>t.push(this.idb.command(this.idb._meta,"READ",{_id:e}))),Promise.all(t)}};var h=r(4)("turtleDB:syncFrom");var f=class{constructor(e){this.targetUrl=e,this.sessionID=(new Date).toISOString(),this.metaDocsFromTortoise=[],this.updatedMetaDocs=[],this.newTortoiseMetaDocs=[],this.docsFromTortoise=[]}start(){return this.checkServerConnection("/connect").then(()=>this.getTurtleID()).then(()=>this.getLastTurtleKey()).then(()=>this.sendRequestForTortoiseMetaDocs("/_changed_meta_docs")).then(()=>this.findMissingRevIds()).then(()=>this.sendRequestForTortoiseDocs("/_changed_docs")).then(()=>this.insertUpdatedMetaDocs()).then(()=>this.insertNewDocsIntoStore()).then(()=>this.updateSyncFromTortoiseDoc()).then(()=>this.sendSuccessConfirmation("/_confirm_sync")).catch(e=>console.log("Sync From Error:",e))}checkServerConnection(e){return u.a.get(this.targetUrl+e).then(e=>(h("\n #0 HTTP <==> Tortoise connection checked"),200===e.status)).catch(e=>{if(!e.response)return Promise.reject("Failed to connect to server");e.response.status,e.response.data})}getTurtleID(){return this.idb.command(this.idb._turtleDBMeta,"READ_ALL",{}).then(e=>(h("\n getTurtleID()"),this.turtleID=e[0]._id))}getLastTurtleKey(){return this.idb.command(this.idb._syncFromStore,"READ_ALL",{}).then(e=>{h("\n getLastTurtleKey()");const t=e[0];this.lastTurtleKey=0===t.history.length?"0":t.history[0].lastKey,h(`\n Get TurtleDBs ID and local checkpoint (${this.lastTurtleKey}) from previous sync session`)})}sendRequestForTortoiseMetaDocs(e){return this.sendInitialMetaDocRequest(e).then(({data:t})=>(h(`\n #2 HTTP <== from Tortoise with ${t.metaDocs.length} changed metadocs`),0===t.metaDocs.length?Promise.reject("0 metadocs recieved from Tortoise - no sync needed"):(this.metaDocsFromTortoise.push(...t.metaDocs),t.lastBatch?void h("\n Recieved all metadocs from Tortoise"):this.sendNextMetaDocRequest(e))))}sendInitialMetaDocRequest(e){return h("\n #1 HTTP ==> Initial request to Tortoise requesting any changed metadocs"),u.a.post(this.targetUrl+e,{turtleID:this.turtleID,lastTurtleKey:this.lastTurtleKey,initial:!0})}sendNextMetaDocRequest(e){return h("\n #1 HTTP ==> NEXT request to Tortoise requesting any changed metadocs"),u.a.post(this.targetUrl+e,{initial:!1}).then(({data:t})=>(h(`\n #2 HTTP <== from Tortoise with ${t.metaDocs.length} changed metadocs`),this.metaDocsFromTortoise.push(...t.metaDocs),t.lastBatch?void h("\n Recieved all metadocs from Tortoise"):this.sendNextMetaDocRequest(e)))}findMissingRevIds(){const e=[],t=this.metaDocsFromTortoise.map(t=>this.idb.command(this.idb._meta,"READ",{_id:t._id}).then(r=>{if(r)return JSON.stringify(r._revisions)===JSON.stringify(t._revisions)?void 0:this.findMissingLeafRevs(t).then(r=>{e.push(...r),this.updatedMetaDocs.push(t)});{let r=this.collectAllLeafRevs(t._revisions).map(e=>t._id+"::"+e);e.push(...r),this.newTortoiseMetaDocs.push(t)}}));return Promise.all(t).then(()=>this.missingRevIds=e).then(()=>h(`\n findMissingRevIds() - Turtle requires ${this.missingRevIds.length} missing leaf revisions from Tortoise`))}findMissingLeafRevs(e){const t=this.collectAllLeafRevs(e._revisions),r=e._id,n=t.map(e=>r+"::"+e);return this.idb.getStoreDocsByIdRevs(n).then(e=>{const t=e.filter(e=>e).map(e=>e._id_rev);return n.filter(e=>!t.includes(e))})}collectAllLeafRevs(e,t=[]){0===e[2].length&&t.push(e[0]);for(let r=0;r<e[2].length;r++)this.collectAllLeafRevs(e[2][r],t);return t}sendRequestForTortoiseDocs(e){return this.sendInitialDocsRequest(e).then(t=>this.handleTortoiseDocsResponse(t,e))}sendInitialDocsRequest(e){return h(`\n #3 HTTP ==> to Tortoise initial request for ${this.missingRevIds.length} missing store docs`),u.a.post(this.targetUrl+e,{revIds:this.missingRevIds,initial:!0})}sendNextDocsRequest(e){return h("\n #3 HTTP ==> to Tortoise follow up request for more store docs"),u.a.post(this.targetUrl+e,{initial:!1}).then(t=>this.handleTortoiseDocsResponse(t,e))}handleTortoiseDocsResponse(e,t){const r=e.data;return h(`\n #4 HTTP <== from Tortoise with ${r.docs.length} store docs`),this.docsFromTortoise.push(...r.docs),r.lastBatch?(this.syncToTurtleDoc=r.newSyncToTurtleDoc,void h("\n Recieved all docs from Tortoise")):this.sendNextDocsRequest(t)}insertUpdatedMetaDocs(){const e=this.updatedMetaDocs.map(e=>this.idb.command(this.idb._meta,"UPDATE",{data:e})),t=this.newTortoiseMetaDocs.map(e=>this.idb.command(this.idb._meta,"CREATE",{data:e})),r=[...e,...t];return Promise.all(r).then(()=>h("\n all recieved metadocs inserted into Turtle metastore"))}insertNewDocsIntoStore(){const e=this.docsFromTortoise.map(e=>this.idb.command(this.idb._store,"CREATE",{data:e}));return Promise.all(e).then(()=>h("\n all recieved docs inserted into Turtle store"))}updateSyncFromTortoiseDoc(){return this.idb.command(this.idb._syncFromStore,"UPDATE",{data:this.syncToTurtleDoc}).then(()=>h("\n new sync from history document inserted"))}sendSuccessConfirmation(e){return h("\n #5 HTTP ==> to Tortoise with confirmation of sync"),u.a.get(this.targetUrl+e)}};var p=class{constructor(e){this._store="store",this._meta="metaStore",this._syncToStore="syncToStore",this._syncFromStore="syncFromStore",this._turtleDBMeta="turtleDBMeta",this.ready=new Promise((t,r)=>{const n=window.indexedDB.open(e);n.onupgradeneeded=(e=>{if(this.db=e.target.result,1===e.target.result.version){const e="turtleDB::"+i()();this.db.createObjectStore(this._store,{autoIncrement:!0}).createIndex("_id_rev","_id_rev",{unique:!0}),this.db.createObjectStore(this._meta,{keyPath:"_id"}),this.db.createObjectStore(this._syncToStore,{keyPath:"_id"}).add({_id:e,history:[]}),this.db.createObjectStore(this._syncFromStore,{keyPath:"_id"}).add({_id:e,history:[]}),this.db.createObjectStore(this._turtleDBMeta,{keyPath:"_id"}).add({_id:e}),this.db.onversionchange=(e=>e.target.close())}}),n.onsuccess=(e=>{this.db=e.target.result,t()}),n.onerror=(e=>{this.db=e.target.result,r(e)})})}command(e,t,{_id:r,data:n,x:o,y:s}){return this.ready.then(()=>new Promise((i,a)=>{let c=this.getStore(e,["READ","READ_ALL"].includes(t)?"readonly":"readwrite");c&&("CREATE"===t?c=c.add(n):"READ"===t?c=c.get(r):"READ_ALL"===t?c=c.getAll():"READ_BETWEEN"===t?c=c.getAll(IDBKeyRange.bound(o,s)):"UPDATE"===t?c=c.put(n):"INDEX_READ"===t?c=c.index(n.indexName).get(n.key):"DELETE"===t?c=c.delete(r):"DELETE_ALL"===t?c=c.clear():"GET_ALL_KEYS"===t?c=c.getAllKeys():"COUNT"===t&&(c=c.count())),c.onsuccess=(e=>{i(e.target.result)}),c.onerror=(e=>{console.log(`${t} error:`,e.target.error),console.log(),a(e.target.error)})}))}filterBy(e){let t=Object.keys(e);return this.command(this._store,"READ_ALL",{}).then(r=>r.filter(r=>t.every(t=>r[t]===e[t])))}getStoreDocsByIdRevs(e){const t=e.map(e=>this.command(this._store,"INDEX_READ",{data:{indexName:"_id_rev",key:e}}));return Promise.all(t)}getStore(e,t){return this.hasStoreName(e)?this.db.transaction([e],t).objectStore(e):(console.log(`Store <${e}> does not exist!`),null)}getAllStoreNames(){return Array.prototype.slice.call(this.db.objectStoreNames)}hasStoreName(e){return this.getAllStoreNames().includes(e)}addIndex(e){return this.ready=new Promise((t,r)=>{this.db.close(),window.indexedDB.open("turtleDB",this.db.version+1).onupgradeneeded=(n=>{this.db=n.target.result;const o=n.target.transaction;try{o.objectStore("store").createIndex(e,e),t(`Index: ${e} created successfully.`)}catch(e){r(e)}})}),this.ready}dropDB(e){return new Promise((t,r)=>{const n=window.indexedDB.deleteDatabase(`turtleDB-${e}`);n.onsuccess=(r=>{console.log(`turtleDB-${e} was deleted successfully.`),t(!0)}),n.onerror=(e=>{console.log("Error deleting database..."),r(e)}),n.onblocked=(e=>{console.log("blocked:",e),this.db.close()})})}};const m=r(4);var g=m("turtleDB:syncToSummary"),y=m("turtleDB:syncFromSummary");t.default=class{constructor(e="default"){this.idb=new p(`turtleDB-${e}`),this.syncInProgress=!1,this.batchLimit=1e3;for(const e in a)"function"==typeof a[e]&&(this[e]=a[e])}_printRevTree(e){this._readMetaDoc(e).then(t=>{console.log("-----"),console.log(`Revision Tree for ${e}:`,JSON.stringify(t._revisions,void 0,2)),console.log("-----")})}_readMetaDoc(e){return this.idb.command(this.idb._meta,"READ",{_id:e}).then(e=>e)}_readRevFromIndex(e,t){const r=e+"::"+t;return this.idb.command(this.idb._store,"INDEX_READ",{data:{indexName:"_id_rev",key:r}})}_readWithoutDeletedError(e){let t;return this._readMetaDoc(e).then(r=>r._winningRev?(t=r,this._readRevFromIndex(e,r._winningRev)):Promise.resolve(!1)).then(e=>!!e&&this._packageUpDoc(t,e)).then(e=>e).catch(e=>console.log("Read error:",e))}_packageUpDoc(e,t){let r=Object.assign({},t);return[r._id,r._rev]=r._id_rev.split("::"),delete r._id_rev,new Promise((t,n)=>{if(e._leafRevs.length>1){r._conflicts=!0,r._conflictVersions=[];let n=e._leafRevs.filter(e=>e!==r._rev).map(t=>this._readRevFromIndex(e._id,t).then(e=>{[e._id,e._rev]=e._id_rev.split("::"),delete e._id_rev,r._conflictVersions.push(e)}));Promise.all(n).then(()=>{t(r)})}else t(r)})}_deleteAllOtherLeafRevs(e,t){const r=e._leafRevs.filter(e=>e!==t);let n=Promise.resolve();return r.forEach(t=>{n=n.then(()=>this.delete(e._id,t))}),n}_generateNewDoc(e,t,r){const n=parseInt(t.split("-")[0],10),s=Object.assign({},r);delete s._rev,delete s._id,delete s._conflicts,delete s._conflictVersions;const i=`${n+1}-`+o()(t+JSON.stringify(s));return s._id_rev=e+"::"+i,s}_mergeDocs(e,t){const[r,n]=e._id_rev.split("::"),s=parseInt(n.split("-")[0],10),i=JSON.parse(JSON.stringify(e)),a=Object.assign(i,t);delete a._rev,delete a._id,delete a._conflicts,delete a._conflictVersions;const c=`${s+1}-`+o()(n+JSON.stringify(a));return a._id_rev=r+"::"+c,a}_getLastStoreKey(e){return 0===e.history.length?0:e.history[0].lastKey}_getWinningRev(e){return e.sort((e,t)=>{let[r,n]=e.split("-"),[o,s]=t.split("-");return(r=parseInt(r,10))>(o=parseInt(o,10))?-1:r<o?1:n>s?-1:1})[0]}_updateMetaDocRevisionTree(e,t,r,n){this._insertNewRev(e,t,r,n)}_insertNewRev(e,t,r,n){if(e[0]===r)return n?e[2].push([t,{_deleted:!0},[]]):e[2].push([t,{},[]]);for(let o=0;o<e[2].length;o++)this._insertNewRev(e[2][o],t,r,n)}makeRevWinner(e){const{_id:t,_rev:r}=e;return this._readMetaDoc(t).then(e=>{const n=e._leafRevs.filter(e=>e!==r);let o=Promise.resolve();return n.forEach(e=>{o=o.then(()=>this.delete(t,e))}),o}).then(()=>this.update(t,e,r)).catch(e=>console.log("makeRevWinner error:",e))}sizeOf(e){if(0==e)return"0.00 B";var t=Math.floor(Math.log(e)/Math.log(1024));return(e/Math.pow(1024,t)).toFixed(2)+" "+" KMGTP".charAt(t)+"B"}syncTo(){g("\n ------- NEW Turtle ==> Tortoise SYNC ------");const e=new d(this.remoteUrl,this.batchLimit);return e.idb=this.idb,e.start().then(()=>g("\n ------- Turtle ==> Tortoise sync complete ------"))}syncFrom(){y("\n ------- NEW Tortoise ==> Turtle SYNC ------");const e=new f(this.remoteUrl);return e.idb=this.idb,e.start().then(()=>y("\n ------- Tortoise ==> Turtle sync complete ------"))}editNDocumentsMTimes(e,t){let r=Promise.resolve();for(let n=0;n<t;n+=1)r=r.then(()=>this.editFirstNDocuments(e));r.then(()=>console.log("finished editing"))}readAllMetaDocsAndDocs(){const e={};return this.idb.command(this.idb._meta,"READ_ALL",{}).then(t=>{e.metaDocs=t.filter(e=>e._winningRev);let r=t.map(e=>this._readWithoutDeletedError(e._id));return Promise.all(r)}).then(t=>(e.docs=t.filter(e=>!!e),e)).catch(e=>console.log("readAllMetaDocsAndDocs error:",e))}deleteBetweenNumbers(e,t){return new Promise((r,n)=>{let o=[],s=0;this.idb.getStore(this._meta,"readonly").openCursor().onsuccess=(n=>{const i=n.target.result;if(i){if(n.target.result.value._winningRev&&s>=e&&s<t){const e=n.target.result.value._id;o.push(this.delete(e)),s+=1}i.continue()}else console.log("cursor finished!"),r(Promise.all(o))})})}editFirstNDocuments(e){return new Promise((t,r)=>{let n=[],o=0;this.idb.getStore(this.idb._meta,"readonly").openCursor().onsuccess=(r=>{const s=r.target.result;if(s){if(r.target.result.value._winningRev&&o<e){const e=r.target.result.value._id;n.push(this.read(e).then(t=>{let r=Object.assign(t,{age:Math.floor(1e11*Math.random()+1)});return this.update(e,r)}))}o++,s.continue()}else console.log("Cursor finished!"),t(Promise.all(n))})})}}}])});